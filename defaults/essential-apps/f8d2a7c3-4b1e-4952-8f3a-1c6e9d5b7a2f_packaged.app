{
  "app_metadata": {
    "id": "f8d2a7c3-4b1e-4952-8f3a-1c6e9d5b7a2f",
    "name": "Service Manager",
    "description": "Manage system services - start, stop, and monitor service status",
    "icon": "fas fa-cogs",
    "keywords": [
      "service manager",
      "services",
      "system",
      "admin"
    ],
    "author": "Sypnex OS",
    "version": "1.0.0",
    "type": "user_app",
    "settings": []
  },
  "files": {
    "f8d2a7c3-4b1e-4952-8f3a-1c6e9d5b7a2f.app": "ew0KICAiaWQiOiAiZjhkMmE3YzMtNGIxZS00OTUyLThmM2EtMWM2ZTlkNWI3YTJmIiwNCiAgIm5hbWUiOiAiU2VydmljZSBNYW5hZ2VyIiwNCiAgImRlc2NyaXB0aW9uIjogIk1hbmFnZSBzeXN0ZW0gc2VydmljZXMgLSBzdGFydCwgc3RvcCwgYW5kIG1vbml0b3Igc2VydmljZSBzdGF0dXMiLA0KICAiaWNvbiI6ICJmYXMgZmEtY29ncyIsDQogICJrZXl3b3JkcyI6IFsNCiAgICAic2VydmljZSBtYW5hZ2VyIiwNCiAgICAic2VydmljZXMiLA0KICAgICJzeXN0ZW0iLA0KICAgICJhZG1pbiINCiAgXSwNCiAgImF1dGhvciI6ICJTeXBuZXggT1MiLA0KICAidmVyc2lvbiI6ICIxLjAuMCIsDQogICJ0eXBlIjogInVzZXJfYXBwIiwNCiAgInNldHRpbmdzIjogW10NCn0NCg==",
    "f8d2a7c3-4b1e-4952-8f3a-1c6e9d5b7a2f.html": ""
  },
  "package_info": {
    "format_version": "1.0",
    "created_at": "2025-08-18T05:33:41.715130",
    "packaged_by": "Sypnex OS App Packager",
    "source_directory": "C:\\Users\\bruce\\OneDrive\\Desktop\\AI Research\\sypnex-os-apps\\official\\service_manager"
  }
}